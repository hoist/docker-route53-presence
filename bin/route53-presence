#!/usr/bin/python
#
# Register the local EC2 instance with route53, replacing any existing record.
# Loop to remain active.

import argparse
import os
import time
import sys

import boto
from boto.route53.record import ResourceRecordSets
import requests

def get_zone_id(hostname):
  domainname = '.'.join(hostname.split('.')[-2:])
  zone = conn.get_hosted_zone_by_name(domainname)
  if not zone:
    print "Sorry, you don't have access to that domain!"
    exit(1)
  return zone.GetHostedZoneResponse.Id.split('/')[2]

def get_local_ip():
  return requests.get("http://169.254.169.254/latest/meta-data/local-ipv4").content
  
def get_public_ip():
  return requests.get("http://169.254.169.254/latest/meta-data/public-ipv4").content

def register(hostname, ip, ttl):
  changes = ResourceRecordSets(conn, zone_id)
  change = changes.add_change('UPSERT', hostname, 'A', ttl)
  change.add_value(ip)
  return changes.commit()

hostname_local  = os.environ.get('HOSTNAME_LOCAL')
hostname_public = os.environ.get('HOSTNAME_PUBLIC')
conn = boto.connect_route53(os.environ.get('AWS_ACCESS_KEY'), os.environ.get('AWS_SECRET_KEY'))
zone_id = get_zone_id(hostname_local)

result_local = register(hostname_local, get_local_ip(), 600)
if not result_local:
  exit(1)

sys.stdout.flush()

while True:
  time.sleep(5)
